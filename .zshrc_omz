alias ls="ls -G"
export GOPATH=/Users/orenherman/go
export PATH="$PATH:/opt/homebrew/bin/bin:/Users/orenherman/go/bin"
export LANG=en_US.UTF-8
export ZSH=/Users/orenherman/.oh-my-zsh
export ZPLUG_HOME=/Users/orenherman/.zplug
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
export NVM_LAZY_LOAD=true

source $ZPLUG_HOME/init.zsh
source $ZSH/oh-my-zsh.sh

zplug "plugins/git", from:"oh-my-zsh"
zplug "plugins/z", from:"oh-my-zsh"
zplug "plugins/tig", from:"oh-my-zsh"
#zplug "plugins/nvm", from:"oh-my-zsh", lazy:true
zplug "supercrabtree/k"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "g-plane/zsh-yarn-autocompletions", hook-build:"./zplug.zsh", defer:3
zplug "joshskidmore/zsh-fzf-history-search"
zplug 'themes/clean', from:"oh-my-zsh", as:theme
zplug "lukechilds/zsh-nvm"

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load 

alias jqre="jq '.message | fromjson'"
alias jqr="jq '.message | fromjson | {severity, timestamp, message, caller, \"logging.googleapis.com/trace\"}'"

alias log='git log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cgreen\\ [%cn]" --decorate --date=short'
alias status='git status -s'
alias diff='git diff --name-only --relative --diff-filter=d | xargs bat --diff'
alias gcm='git fetch && git checkout origin/master'
alias gcd='git fetch && git checkout origin/develop'
alias gmd='git fetch && git merge origin/develop'
alias gmm='git fetch && git merge origin/master'
alias gcb='git checkout -b '
alias gpu='git push -u origin $(git branch --show)'
function gcob() { 
	branch_name=$(echo $1 | awk 'match($0, /SP-[0-9]+/) { print substr( $0, RSTART, RLENGTH )}')
	git fetch
        git checkout -b $branch_name origin/master
 }

alias pgtnlp="~/dev/cloud_sql_proxy -instances=stackpulse-production:us-central1:torqdb=tcp:5432"
alias pgtnls="~/dev/cloud_sql_proxy -instances=stackpulse-staging:europe-west1:torqdb=tcp:5431"
alias pgtnld="~/dev/cloud_sql_proxy -instances=stackpulse-development:europe-west1:stackpulsedb=tcp:5430"

prd-bq-fetch-workflow () {
	workflow_id=$1
	bq-fetch-workflow stackpulse-production $workflow_id
}
bq-fetch-workflow () {
	project=$1
	workflow_id=$2
	fetch_wf_output_path=/tmp/fetch-wf-${workflow_id}.output
	query="SELECT data FROM $project.bi.dim_workflow_revisions  WHERE workflow_id = '${workflow_id}' ORDER BY created_at DESC LIMIT 1"
	echo "fetching workflow into: $fetch_wf_output_path"
	bq query --format=prettyjson --use_legacy_sql=false $query 2> /dev/null | jq '.[0].data' -r > $fetch_wf_output_path
	# cat $fetch_wf_output_path | yq -r -P - | code -
        ynv $fetch_wf_output_path
}
ynv () {
        yq $1 -o=json | jnv
}

function precmd() {
    function precmd() {
       tput setaf 1 :-"" 2; printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' â”€ 
    }
}

export HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND=fg=red,bold,underline
bindkey '\eOA' history-substring-search-up # or ^[OA
bindkey '\eOB' history-substring-search-down # or ^[OB

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh # Fuzzy search install

export GO111MODULE=on
export GOROOT="$(brew --prefix golang)/libexec"
export GOPRIVATE="github.com/stackpulse,stackpulse.dev,github.com/torqio"
export GOARCH=arm64
export GOOS=darwin

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/orenherman/dev/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/orenherman/dev/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/orenherman/dev/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/orenherman/dev/google-cloud-sdk/completion.zsh.inc'; fi
